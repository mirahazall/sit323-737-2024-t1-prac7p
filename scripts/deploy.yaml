# ===============================
# Deployment for Calculator Microservice
# ===============================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculator-microservice
spec:
  replicas: 1  # Only one instance of the microservice
  selector:
    matchLabels:
      app: calculator-microservice
  template:
    metadata:
      labels:
        app: calculator-microservice
    spec:
      containers:
      - name: calculator-microservice
        image: mirahazall/calculator-microservice:latest  # Public Docker Hub image
        imagePullPolicy: Always  # Always pull the latest version
        ports:
        - containerPort: 3000  # App runs on port 3000
        readinessProbe:  # Check if the app is ready to receive traffic
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        startupProbe:  # Check if the app starts up correctly
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        env:
        - name: MONGO_URI  # MongoDB connection string from secret
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: mongo-uri

---

# ===============================
# External LoadBalancer Service for Calculator App
# ===============================

apiVersion: v1
kind: Service
metadata:
  name: calculator-microservice
spec:
  selector:
    app: calculator-microservice
  type: LoadBalancer  # Exposes the service externally via cloud provider
  ports:
    - protocol: TCP
      port: 80  # External port
      targetPort: 3000  # Maps to containerâ€™s port
---

# ===============================
# PersistentVolumeClaims for MongoDB
# ===============================

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce  # Only one pod can write at a time
  resources:
    requests:
      storage: 2Gi  # 2GiB storage for database
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # 1GiB for backups

---

# ===============================
# MongoDB Deployment
# ===============================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongo-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongo-password
            - name: MONGO_INITDB_DATABASE
              value: "calculatorDB"
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db  # MongoDB stores its data here
      volumes:
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc

---

# ===============================
# Internal Service for MongoDB
# ===============================

apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  type: ClusterIP  # Only accessible within the cluster
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb

---

# ===============================
# MongoDB Backup CronJob
# ===============================

apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup
spec:
  schedule: "*/1 * * * *"  # Runs every minute (change as needed)
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mongodb-backup
            image: mongo:latest
            command: ["sh", "-c"]
            args:
              - >
                mongodump --uri="$MONGO_URI" --out=/backup/$(date +\%F)
            env:
              - name: MONGO_URI
                valueFrom:
                  secretKeyRef:
                    name: mongodb-credentials
                    key: mongo-uri
            volumeMounts:
              - name: backup-storage
                mountPath: /backup
          restartPolicy: OnFailure
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: mongo-backup-pvc







